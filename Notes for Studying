Step 1: (Installing)
npm init -y
npm install express cors joi nodemon
npm install -g nodemon

FUNCTION OF INSTALLING:

express → Web framework
cors → Allows API to be used by frontend
pg → PostgreSQL driver for Node.js
dotenv → Loads environment variables (e.g., DB credentials)
nodemon → Auto-restarts server

Step 2: (Requiring & Setting up the Server)

Created index.js for express, cors and dotenv

1️⃣ Imports Express.js, CORS, and dotenv.
2️⃣ Initializes the Express app and enables JSON body parsing.
3️⃣ Loads genre-related routes from routes/genres.js.
4️⃣ Starts the server on port 3000 (or .env defined port).

Using route for genre.js

express.Router() creates a modular mini-server for API routes.
We use it to group related routes (e.g., all genre-related routes).
We export router, so index.js can require and use it.
app.use("/api/genres", genreRoutes); makes sure all routes in genre.js start with /api/genres.

HTTP Method	URL	What It Does
GET	http://localhost:3000/api/genres	Calls router.get("/") (All genres)
GET	http://localhost:3000/api/genres/2	Calls router.get("/:id") (Single genre)

Step: 3
Creating the All the methods in genre.js GET/GET ID/POST/PUT/DELETE

Method	URL	What It Does
GET	/api/genres	Fetch all genres
GET	/api/genres/:id	Get a genre by ID
POST	/api/genres	Add a new genre
PUT	/api/genres/:id	Update a genre
DELETE	/api/genres/:id	Remove a genre

Step 4:
 Next Steps: Connect to PostgreSQL

 Install PostgreSQL & Node.js Client